{"version":3,"sources":["_angled_edges.scss","app.scss","app.css"],"names":[],"mappings":"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","file":"../app.css","sourcesContent":["\r\n// $angle: The angle in degrees: 1 - 45\r\n// $angle-position-y: The Y position of the angle: top | bottom | both\r\n// $angle-position-x: The X position of the angle: left | right\r\n// $angle-position-bottom-x: The X position of the bottom angle if using 'both' for $angle-position-y: left | right\r\n// $fallback: Create a fallback for older browsers: true | false\r\n// $fallback-color: Fallback colour for older browsers: Hex color\r\n\r\n@mixin angle-edge($angle, $angle-position-y, $angle-position-x, $angle-position-bottom-x: '', $fallback: true, $fallback-color: #fff) {\r\n\r\n  position: relative;\r\n  overflow: hidden;\r\n\r\n  // Converts degrees to VW, 100vw = 45deg using this technique\r\n  @if $angle > 45 {\r\n    $angle: 0;\r\n    @error 'Invalid angle, it must be between 1-45';\r\n  }\r\n  @if $angle < 46 {\r\n    $angle: convertDegToVW($angle);\r\n  }\r\n\r\n  @if $angle-position-bottom-x == '' {\r\n    $angle-position-bottom-x: $angle-position-x;\r\n  }\r\n\r\n  $angle-calc-top: calc(0% + #{$angle}vw);\r\n  $angle-calc-bottom: calc(100% - #{$angle}vw);\r\n\r\n  $clip-path-top: 0 0, 100% 0;\r\n  $clip-path-bottom: 100% 100%, 0 100%;\r\n\r\n  $border-width-top: '';\r\n  $border-width-bottom: '';\r\n  $border-color-top: '';\r\n  $border-color-bottom: '';\r\n\r\n\r\n  @if $angle-position-y == 'top' or $angle-position-y == 'both' {\r\n\r\n    @if $angle-position-x == 'left' {\r\n      $clip-path-top: 0 $angle-calc-top, 100% 0;\r\n\r\n      $border-width-top: #{$angle + 1}vw 100vw 0 0;\r\n    }\r\n\r\n    @if $angle-position-x == 'right' {\r\n      $clip-path-top: 0 0, 100% $angle-calc-top;\r\n\r\n      $border-width-top: #{$angle + 1}vw 0 0 100vw;\r\n    }\r\n\r\n    $border-color-top: $fallback-color transparent transparent transparent;\r\n  }\r\n\r\n\r\n  @if $angle-position-y == 'bottom' or $angle-position-y == 'both' {\r\n\r\n    @if $angle-position-y == 'both' and $angle-position-x != $angle-position-bottom-x {\r\n      $angle-position-x: $angle-position-bottom-x;\r\n    }\r\n\r\n    @if $angle-position-x == 'left' {\r\n      $clip-path-bottom: 100% 100%, 0 $angle-calc-bottom;\r\n\r\n      $border-width-bottom: 0 100vw #{$angle + 1}vw 0;\r\n    }\r\n\r\n    @if $angle-position-x == 'right' {\r\n      $clip-path-bottom: 100% $angle-calc-bottom, 0 100%;\r\n\r\n      $border-width-bottom: 0 0 #{$angle + 1}vw 100vw;\r\n    }\r\n\r\n    $border-color-bottom: transparent transparent $fallback-color transparent;\r\n  }\r\n\r\n  $clip-path: polygon($clip-path-top, $clip-path-bottom);\r\n  clip-path: $clip-path;\r\n\r\n\r\n  // Fallback for clip-path with solid colours\r\n  @if $fallback {\r\n\r\n    @supports not (clip-path: $clip-path) {\r\n\r\n      &::before, &::after {\r\n        content: \"\";\r\n        position: absolute;\r\n        left: 0;\r\n        z-index: 10;\r\n        display: block;\r\n        border-style: solid;\r\n      }\r\n\r\n      @if $angle-position-y == 'top' or $angle-position-y == 'both' {\r\n        &::before {\r\n          top: 0;\r\n          border-width: $border-width-top;\r\n          border-color: $border-color-top;\r\n        }\r\n      }\r\n\r\n      @if $angle-position-y == 'bottom' or $angle-position-y == 'both' {\r\n        &::after {\r\n          bottom: 0;\r\n          border-width: $border-width-bottom;\r\n          border-color: $border-color-bottom;\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\n// Converts degrees to VW, 100vw = 45deg using this technique\r\n@function convertDegToVW($angle){\r\n  @return round($angle*2.22);\r\n}\r\n\r\n\r\n// Classes\r\n.angle--top-left {\r\n  @include angle-edge($angle: 3, $angle-position-y: 'top', $angle-position-x: 'left');\r\n}\r\n\r\n.angle--top-right {\r\n  @include angle-edge($angle: 3, $angle-position-y: 'top', $angle-position-x: 'right');\r\n}\r\n\r\n.angle--bottom-left {\r\n  @include angle-edge($angle: 3, $angle-position-y: 'bottom', $angle-position-x: 'left');\r\n}\r\n\r\n.angle--bottom-right {\r\n  @include angle-edge($angle: 3, $angle-position-y: 'bottom', $angle-position-x: 'right');\r\n}\r\n\r\n.angle--both-left-left {\r\n  @include angle-edge($angle: 3, $angle-position-y: 'both', $angle-position-x: 'left');\r\n}\r\n\r\n.angle--both-right-right {\r\n  @include angle-edge($angle: 3, $angle-position-y: 'both', $angle-position-x: 'right');\r\n}\r\n\r\n.angle--both-left-right {\r\n  @include angle-edge($angle: 3, $angle-position-y: 'both', $angle-position-x: 'left', $angle-position-bottom-x: 'right');\r\n}\r\n\r\n.angle--both-right-left {\r\n  @include angle-edge($angle: 3, $angle-position-y: 'both', $angle-position-x: 'right', $angle-position-bottom-x: 'left');\r\n}\r\n\r\n\r\n  .angle__content {\r\n    display: block;\r\n    width: 100%;\r\n    height: auto;\r\n  }\r\n\r\n.angle--colour {\r\n  color: #fff;\r\n  background-color: #2196F3;\r\n  text-align: center;\r\n  padding: 10% 0;\r\n}","@import \"./_bourbon\";\r\n@import \"./_angled_edges\";\r\n\r\n\r\n$bgc: pink;\r\n\r\nbody {\r\n  font: 100% Helvetica, sans-serif;\r\n  background-color: $bgc!important;\r\n  color: #333;\r\n}\r\n\r\na {\r\n  color: $bgc;\r\n  font-weight: bolder;\r\n  font-size: 122px;\r\n}\r\n\r\n\r\n\r\n"]}